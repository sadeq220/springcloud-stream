spring.application.name=EDA

### Kafka messaging middleware binder
spring.cloud.stream.default-binder=kafka
spring.cloud.stream.kafka.binder.brokers=localhost:9092

### Spring cloud Stream Binding configuration

# function definition or Functional composition(e.g. F1|F2)
# Functional composition compose a new function from several functions
# and new function name would be F1F2
spring.cloud.function.definition=uppercase|wrapInQuotes

# spring cloud stream has a concept of `consumer group`(similar to kafka) to scale out easily.
# causes to set 'startOffset' to earliest, channelName=bindingName
spring.cloud.stream.bindings.uppercasewrapInQuotes-in-0.group=consumerG1
# There ary two types of binding input,output
spring.cloud.stream.bindings.uppercasewrapInQuotes-in-0.destination=kafkaTopicName
spring.cloud.stream.bindings.uppercasewrapInQuotes-in-0.binder=kafka

spring.cloud.stream.bindings.uppercasewrapInQuotes-out-0.binder=kafka
spring.cloud.stream.bindings.uppercasewrapInQuotes-out-0.destination=kafkaTopicName2

## logging configuration
logging.level.root=debug